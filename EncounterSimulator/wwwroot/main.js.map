{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/add-character/add-character.component.html","webpack:///./src/app/add-character/add-character.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/available-characters/available-characters.component.html","webpack:///./src/app/available-characters/available-characters.component.ts","webpack:///./src/app/encounter.service.ts","webpack:///./src/app/encounter/encounter.component.html","webpack:///./src/app/encounter/encounter.component.ts","webpack:///./src/app/fight/fight.component.html","webpack:///./src/app/fight/fight.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/game-options/game-options.component.html","webpack:///./src/app/game-options/game-options.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/manage-characters/manage-characters.component.html","webpack:///./src/app/manage-characters/manage-characters.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/pipes/hide-show.pipe.ts","webpack:///./src/app/preparation/preparation.component.html","webpack:///./src/app/preparation/preparation.component.ts","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/app/services/character-sharing.service.ts","webpack:///./src/app/services/character.service.ts","webpack:///./src/app/services/game.service.ts","webpack:///./src/app/services/sidenav.service.ts","webpack:///./src/app/services/utils.service.ts","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/character.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div class=\"container\">\r\n    <mat-card>\r\n        <mat-card-header class=\"card-header\">\r\n            <mat-card-subtitle class=\"card-margin\">Using the encounter simulator</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"card-margin\">\r\n            <p class=\"card-content\">The encounter simulator is a tool intended for dungeon masters and players alike to track their combat encounters while playing Dungeons & Dragons.</p>\r\n            <p class=\"card-content\">Users can create and manage their characters before selecting characters for combat, rolling initiative, and simulating the entire encounter.</p>\r\n            <p class=\"card-content\">During the combat, each turn can be \"recorded\" by selecting an action, target, and value. Optionally, enter some flavor text for the action.</p>\r\n            <p class=\"card-content\">All actions and rounds are tracked and logged, and all combat encounters can be reviewed.</p>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h2 mat-dialog-title>Create New Character</h2>\r\n\r\n<mat-dialog-content [formGroup]=\"form\">\r\n\r\n    <mat-form-field class=\"fullWidth\">\r\n        <input matInput placeholder=\"Name\" formControlName=\"name\" value=\"{{character.name}}\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"fullWidth\">\r\n        <input type=\"number\" matInput placeholder=\"Speed\" formControlName=\"speed\" value=\"{{character.speed}}\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"fullWidth\">\r\n        <input type=\"number\" matInput placeholder=\"Armor Class\" formControlName=\"ac\" value=\"{{character.ac}}\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"fullWidth\">\r\n        <input type=\"number\" matInput placeholder=\"Max HP\" formControlName=\"maxHP\" value=\"{{character.maxHP}}\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"fullWidth\">\r\n        <input type=\"number\" matInput placeholder=\"Dex Modifier\" formControlName=\"dexModifier\" value=\"{{character.dexModifier}}\" />\r\n    </mat-form-field>\r\n\r\n    <table class=\"fullWidth\" cellspacing=\"0\">\r\n        <tr>\r\n            <td>\r\n                <mat-checkbox matInput [(ngModel)]=\"isNpc\" [ngModelOptions]=\"{standalone: true}\" (change)=\"toggleFormControls(character.id)\" labelPosition=\"after\">NPC</mat-checkbox>\r\n            </td>\r\n            <td>\r\n                <mat-form-field>\r\n                    <input matInput [(ngModel)]=\"quantity\" placeholder=\"Quantity\" formControlName=\"quantity\" value=\"1\" />\r\n                </mat-form-field>\r\n            </td>\r\n            <td>\r\n                <mat-form-field>\r\n                    <input matInput placeholder=\"Owner\" formControlName=\"owner\" value=\"{{character.owner}}\" />\r\n                </mat-form-field>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"right\">\r\n    <button class=\"mat-raised-button\" (click)=\"close()\">Cancel</button>\r\n    <button class=\"mat-raised-button mat-primary\" (click)=\"save()\" [disabled]=\"!form.valid\">Save</button>\r\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { AvailableCharacter } from 'src/models/character';\r\n\r\n@Component({\r\n  selector: 'app-add-character',\r\n  templateUrl: './add-character.component.html',\r\n  styleUrls: ['./add-character.component.scss']\r\n})\r\nexport class AddCharacterComponent implements OnInit {\r\n    form: FormGroup;\r\n    character: AvailableCharacter;\r\n\r\n    isNpc: boolean;\r\n    quantity: number;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private dialogRef: MatDialogRef<AddCharacterComponent>,\r\n                @Inject(MAT_DIALOG_DATA) data) {\r\n        this.character = data;\r\n        this.isNpc = this.character.owner == null || this.character.owner.toLowerCase() == 'npc';\r\n        this.quantity = 1;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.form = this.fb.group({\r\n            id: [this.character.id],\r\n            name: [this.character.name, Validators.required],\r\n            speed: [this.character.speed, [Validators.required, Validators.min(0)]],\r\n            ac: [this.character.ac, [Validators.required, Validators.min(0)]],\r\n            maxHP: [this.character.maxHP, [Validators.required, Validators.min(0)]],\r\n            owner: [this.character.owner],\r\n            dexModifier: [this.character.dexModifier],\r\n            quantity: [this.quantity, [Validators.min(1)]]\r\n        });\r\n\r\n        this.toggleFormControls(this.character.id);\r\n    }\r\n\r\n    toggleFormControls(id: number) {\r\n        // If this is an NPC, we can't set the owner but we can change the quantity of them\r\n        if (this.isNpc) {\r\n            this.form.get('owner').disable();\r\n            this.form.get('quantity').enable();\r\n        }\r\n        else {\r\n            this.form.get('owner').enable();\r\n            this.form.get('quantity').disable();\r\n        }\r\n\r\n        // If this is an existing character, though, we can't change the quantity\r\n        if (id > 0) {\r\n            this.form.get('quantity').disable();\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.dialogRef.close({ character: this.form.value, quantity: this.quantity });\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","<mat-sidenav-container fullscreen>\r\n    <mat-sidenav #sidenav mode=\"side\" [fixedInViewport]=\"true\">\r\n        <div>\r\n            <app-sidenav></app-sidenav>\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <app-header (toggleSidenavEvent)=\"toggleSidenav()\"></app-header>\r\n        <router-outlet></router-outlet>\r\n        <app-footer></app-footer>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\nimport { SidenavService } from 'src/app/services/sidenav.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    @ViewChild('sidenav') public sideNav: MatSidenav;\r\n\r\n    constructor(private sidenavService: SidenavService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.sidenavService.sideNav = this.sideNav;\r\n    }\r\n\r\n    toggleSidenav() {\r\n        this.sidenavService.sideNav.toggle();\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { MaterialModule } from './material/material.module';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AvailableCharactersComponent } from './available-characters/available-characters.component';\r\nimport { AddCharacterComponent } from './add-character/add-character.component';\r\nimport { PreparationComponent } from './preparation/preparation.component';\r\nimport { FightComponent } from './fight/fight.component';\r\nimport { CharacterSharingService } from './services/character-sharing.service';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { SidenavComponent } from './sidenav/sidenav.component';\r\nimport { ManageCharactersComponent } from './manage-characters/manage-characters.component';\r\nimport { EncounterComponent } from './encounter/encounter.component';\r\nimport { HideShowPipe } from './pipes/hide-show.pipe';\r\nimport { GameOptionsComponent } from './game-options/game-options.component';\r\nimport { ReviewComponent } from './review/review.component';\r\nimport { StatisticsComponent } from './statistics/statistics.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: EncounterComponent\r\n    },\r\n    {\r\n        path: 'encounter', component: EncounterComponent\r\n    },\r\n    {\r\n        path: 'about', component: AboutComponent\r\n    },\r\n    {\r\n        path: 'manage', component: ManageCharactersComponent\r\n    },\r\n    {\r\n        path: 'options', component: GameOptionsComponent\r\n    },\r\n    {\r\n        path: 'review', component: ReviewComponent\r\n    },\r\n    {\r\n        path: 'statistics', component: StatisticsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      HeaderComponent,\r\n      FooterComponent,\r\n      HomeComponent,\r\n      AvailableCharactersComponent,\r\n      AddCharacterComponent,\r\n      PreparationComponent,\r\n      FightComponent,\r\n      AboutComponent,\r\n      SidenavComponent,\r\n      ManageCharactersComponent,\r\n      EncounterComponent,\r\n      HideShowPipe,\r\n      GameOptionsComponent,\r\n      ReviewComponent,\r\n      StatisticsComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpModule,\r\n      RouterModule.forRoot(routes, {useHash: true}),\r\n      MaterialModule\r\n  ],\r\n  entryComponents: [\r\n      AddCharacterComponent,\r\n      AvailableCharactersComponent\r\n  ],\r\n  exports: [\r\n      AvailableCharactersComponent,\r\n      AddCharacterComponent\r\n    ],\r\n  providers: [CharacterSharingService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\r\n\r\n    <!-- Checkbox Column -->\r\n    <ng-container matColumnDef=\"select\">\r\n        <mat-header-cell *matHeaderCellDef>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                            matTooltip=\"Select all characters\">\r\n            </mat-checkbox>\r\n        </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">\r\n            <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                            (change)=\"$event ? selection.toggle(row) : null\"\r\n                            [checked]=\"selection.isSelected(row)\">\r\n            </mat-checkbox>\r\n        </mat-cell>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let character\">{{character.name}} ({{character.owner == null ? 'NPC' : character.owner}})</mat-cell>\r\n    </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"columnHeaders\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: columnHeaders;\"\r\n                (click)=\"$event && $event.target.innerHTML != 'delete' && $event.target.innerHTML != 'edit' ? selection.toggle(row) : null\"\r\n                class=\"character-row\"></mat-row>\r\n\r\n</mat-table>","import { Component, OnInit, ViewChild, Injectable, Output } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, from } from 'rxjs';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSort, MatTableDataSource, MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { AddCharacterComponent } from '../add-character/add-character.component';\r\nimport { CharacterService } from '../services/character.service';\r\nimport { AvailableCharacter } from 'src/models/character';\r\nimport { CharacterSharingService } from '../services/character-sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-available-characters',\r\n  templateUrl: './available-characters.component.html',\r\n  styleUrls: ['./available-characters.component.scss']\r\n})\r\n    \r\nexport class AvailableCharactersComponent implements OnInit {\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    dataSource: MatTableDataSource<AvailableCharacter>;\r\n    availableCharacters: AvailableCharacter[];\r\n    columnHeaders = ['select', 'name'];\r\n    selection = new SelectionModel<AvailableCharacter>(true, []);\r\n\r\n    constructor(private charService: CharacterService, private selectedCharService: CharacterSharingService, private dialog: MatDialog) {\r\n        this.refreshData();\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    sendSelectedCharacters() {\r\n        this.selectedCharService.setSelected(this.selection.selected);\r\n    }\r\n\r\n    restart() {\r\n        this.resetSelections();\r\n        this.refreshData();\r\n    }\r\n\r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n    masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n    \r\n    refreshData() {\r\n        this.availableCharacters = [];\r\n        this.charService.getAvailableCharacters().subscribe(result => {\r\n            for (let character of result.json()) {\r\n                this.availableCharacters.push(character);\r\n            }\r\n        },\r\n        error => {\r\n            console.error(error);\r\n        },\r\n        () => {\r\n            this.dataSource = new MatTableDataSource(this.availableCharacters);\r\n            this.dataSource.sort = this.sort;\r\n        });\r\n    }\r\n\r\n    resetSelections() {\r\n        this.selection.clear();\r\n        this.selectedCharService.setSelected(<AvailableCharacter[]>[]);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\nimport { ActiveCharacter } from '../models/character';\r\nimport { Action } from '../models/encounter';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncounterService {\n    BASE_URL = 'Encounter/';\n\n    constructor(private http: Http) { }\n\n    startEncounter(characters: ActiveCharacter[]) {\n        return this.http.post(this.BASE_URL + 'StartEncounter', characters);\r\n    }\n\n    saveAction(action: Action) {\n        return this.http.post(this.BASE_URL + 'SaveAction', action);\r\n    }\n}\n","<div class=\"container container-vertical\">\r\n    <h1 style=\"margin-left: 1em\">Start an Encounter!</h1>\r\n    <mat-vertical-stepper [linear]=\"true\" #stepper>\r\n\r\n        <mat-step>\r\n            <ng-template matStepLabel>Select your characters</ng-template>\r\n            <app-available-characters></app-available-characters>\r\n            <div>\r\n                <button (click)=\"sendSelectedCharacters()\" color=\"warn\" mat-raised-button class=\"step\" matStepperNext>Begin preparation!</button>\r\n            </div>\r\n        </mat-step>\r\n\r\n        <mat-step>\r\n            <ng-template matStepLabel><div (click)=\"sendSelectedCharacters()\">Prepare for battle</div></ng-template>\r\n            <app-preparation></app-preparation>\r\n            <div>\r\n                <button color=\"primary\" mat-raised-button class=\"step\" matStepperPrevious>Back</button>\r\n                <button color=\"warn\" mat-raised-button class=\"step\" matStepperNext (click)=\"beginFight()\">Begin fight!</button>\r\n            </div>\r\n        </mat-step>\r\n\r\n        <mat-step>\r\n            <ng-template matStepLabel><div (click)=\"beginFight()\">Fight!</div></ng-template>\r\n            <app-fight></app-fight>\r\n            <div>\r\n                <button mat-raised-button matStepperPrevious class=\"step\" color=\"primary\">Back</button>\r\n                <button mat-raised-button (click)=\"stepper.reset(); restartFight();\" color=\"warn\">Start Over</button>\r\n            </div>\r\n        </mat-step>\r\n\r\n    </mat-vertical-stepper>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AvailableCharactersComponent } from '../available-characters/available-characters.component';\r\nimport { PreparationComponent } from '../preparation/preparation.component';\r\nimport { FightComponent } from '../fight/fight.component';\r\n\r\n@Component({\r\n  selector: 'app-encounter',\r\n  templateUrl: './encounter.component.html',\r\n  styleUrls: ['./encounter.component.scss']\r\n})\r\nexport class EncounterComponent implements OnInit {\r\n\r\n    @ViewChild(AvailableCharactersComponent) chars: AvailableCharactersComponent;\r\n    @ViewChild(PreparationComponent) prep: PreparationComponent;\r\n    @ViewChild(FightComponent) fight: FightComponent;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    sendSelectedCharacters() {\r\n        this.chars.sendSelectedCharacters();\r\n        this.prep.refreshSelectedCharacters();\r\n    }\r\n\r\n    beginFight() {\r\n        this.prep.refreshSelectedCharacters();\r\n        this.fight.initializeCharacters();\r\n    }\r\n\r\n    restartFight() {\r\n        this.chars.restart();\r\n    }\r\n\r\n}\r\n","<mat-accordion class=\"example-headers-align\">\r\n    <div class=\"container-horizontal\">\r\n        <mat-icon [matBadge]=\"turnsElapsed\" matBadgeColor=\"accent\" matTooltip=\"{{turnsElapsed}} individual turn(s) elapsed\">person</mat-icon>\r\n        <mat-icon [matBadge]=\"roundsElapsed\" matBadgeColor=\"accent\" matTooltip=\"{{roundsElapsed}} complete round(s) elapsed\">autorenew</mat-icon>\r\n        <mat-icon [matBadge]=\"timeElapsed\" matBadgeColor=\"accent\" matTooltip=\"{{timeElapsed}} in-game second(s) elapsed\">access_time</mat-icon>\r\n    </div>\r\n    <mat-expansion-panel *ngFor=\"let character of characters; let i = index\" [expanded]=\"step === i\" hideToggle>\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                <div class=\"spinner-wrapper\">\r\n                    <mat-progress-spinner *ngIf=\"step === i\" color=\"accent\" mode=\"indeterminate\" [diameter]=\"20\"></mat-progress-spinner>\r\n                </div>\r\n                {{i+1}}. {{character.name}}\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                <div>\r\n                    <mat-icon matTooltip=\"Current HP / Max HP\">favorite_border</mat-icon>\r\n                    {{character.currentHP}} / {{character.maxHP}}\r\n                </div>\r\n\r\n                <div>\r\n                    <mat-icon matTooltip=\"Armor Class\">security</mat-icon>\r\n                    {{character.ac}}\r\n                </div>\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n\r\n        <div class=\"container-vertical\">\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Select an action\">\r\n                    <mat-option *ngFor=\"let action of actions\" [value]=\"action.id\">{{action.name}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-select placeholder=\"Select a target\">\r\n                    <mat-option *ngFor=\"let character of characters\" [value]=\"character.id\">{{character.name}}</mat-option>\r\n                    <mat-option value=\"-1\">Other</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <input matInput type=\"number\" placeholder=\"Enter a value\" />\r\n                <mat-hint align=\"end\">hint</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-chip-list #statusChipList>\r\n                    <mat-chip *ngFor=\"let status of statuses\"\r\n                              class=\"chip\"\r\n                              selected=\"true\"\r\n                              removable=\"true\"\r\n                              (removed)=\"remove(status)\"\r\n                              matTooltip=\"{{status.description}}\">\r\n                        {{status.name}}\r\n                        <mat-icon matChipRemove>cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Inflict statuses\"\r\n                           #statusInput\r\n                           [formControl]=\"statusCtrl\"\r\n                           [matAutocomplete]=\"statusAutocomplete\"\r\n                           [matChipInputFor]=\"statusChipList\"\r\n                           [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                           (matChipInputTokenEnd)=\"add($event)\">\r\n                </mat-chip-list>\r\n                <mat-autocomplete #statusAutocomplete (optionSelected)=\"selected($event)\">\r\n                    <mat-option *ngFor=\"let status of filteredStatuses | async\" [value]=\"status.name\">\r\n                        {{status.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field style=\"width: 100%;\">\r\n                <textarea matInput placeholder=\"Enter some flavor text\"></textarea>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-action-row>\r\n            <button mat-raised-button color=\"primary\" (click)=\"saveAction()\">Another Action</button>\r\n            <span class=\"spacer\"></span>\r\n            <button mat-raised-button color=\"accent\" (click)=\"endTurn()\">End Turn</button>\r\n        </mat-action-row>\r\n    </mat-expansion-panel>\r\n</mat-accordion>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ENTER } from '@angular/cdk/keycodes';\r\nimport { CharacterSharingService } from 'src/app/services/character-sharing.service';\r\nimport { AvailableCharacter, ActiveCharacter } from 'src/models/character';\r\nimport { Status, ActionType } from 'src/models/game';\r\nimport { MatAutocompleteSelectedEvent, MatChipInputEvent, MatAutocomplete } from '@angular/material';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { GameService } from 'src/app/services/game.service';\r\nimport { EncounterService } from 'src/app/encounter.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fight',\r\n  templateUrl: './fight.component.html',\r\n  styleUrls: ['./fight.component.scss']\r\n})\r\nexport class FightComponent implements OnInit {\r\n    @ViewChild('statusInput') statusInput: ElementRef<HTMLInputElement>;\r\n    @ViewChild('statusAutocomplete') statusAutocomplete: MatAutocomplete;\r\n\r\n    encounterId: number;\r\n\r\n    // * For status autocomplete and chiplist\r\n    separatorKeysCodes: number[] = [ENTER];\r\n    statusCtrl = new FormControl();\r\n    filteredStatuses: Observable<Status[]>;\r\n    statuses: Status[] = [];\r\n    allStatuses: Status[] = [];\r\n\r\n    actions: ActionType[] = [];\r\n    actionForm: FormGroup;\r\n\r\n    // * For character turn order\r\n    characters: ActiveCharacter[];\r\n    step = 0;\r\n    roundsElapsed = 0;\r\n    turnsElapsed = 0;\r\n    timeElapsed = 0;\r\n\r\n    constructor(private fb: FormBuilder,\r\n                private selectedCharService: CharacterSharingService,\r\n                private gameService: GameService,\r\n                private encounterService: EncounterService) {\r\n\r\n        this.initializeStatuses();\r\n        this.initializeActionTypes();\r\n\r\n        this.filteredStatuses = this.statusCtrl.valueChanges.pipe(\r\n            startWith(null),\r\n            map((statusName: string | null) => statusName ? this._filter(statusName) : this.allStatuses.slice()));\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    initializeStatuses() {\r\n        this.gameService.getAllStatuses().subscribe(result => {\r\n            for (let status of result.json()) {\r\n                this.allStatuses.push(status);\r\n            }\r\n        },\r\n            error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    initializeActionTypes() {\r\n        this.gameService.getAllActionTypes().subscribe(result => {\r\n                for (let actionType of result.json()) {\r\n                    this.actions.push(actionType);\r\n                }\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n    initializeCharacters() {\r\n        this.characters = this.selectedCharService.getSelectedAsActive();\r\n        this.encounterService.startEncounter(this.characters);\r\n    }\r\n\r\n    endTurn() {\r\n\r\n        this.step++;\r\n        this.turnsElapsed++;\r\n\r\n        if (this.step == this.characters.length) {\r\n            this.step = 0;\r\n            this.roundsElapsed++;\r\n            this.timeElapsed += 6;\r\n        }\r\n    }\r\n\r\n    saveAction() {\r\n        \r\n    }\r\n\r\n    // * Methods for handling the status chip list and auto-complete\r\n    // ****\r\n    add(event: MatChipInputEvent): void {\r\n        // Add status only when MatAutocomplete is not open\r\n        // To make sure this does not conflict with OptionSelected Event\r\n        if (!this.statusAutocomplete.isOpen) {\r\n            const input = event.input;\r\n            const value = event.value;\r\n            this.addStatus(value, input);\r\n        }\r\n    }\r\n\r\n    remove(status: Status): void {\r\n        const index = this.statuses.findIndex(s => s.name.toLowerCase() === status.name.trim().toLowerCase());\r\n\r\n        if (index >= 0) {\r\n            this.statuses.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    selected(event: MatAutocompleteSelectedEvent): void {\r\n        this.addStatus(event.option.viewValue, this.statusInput.nativeElement);\r\n    }\r\n\r\n    addStatus(value: string, input: HTMLInputElement) {\r\n        if ((value || '').trim()) {\r\n            let found = this.allStatuses.find(s => s.name.toLowerCase() === value.trim().toLowerCase());\r\n            if (found && this.statuses.findIndex(s => s.id === found.id) < 0)\r\n                this.statuses.push(found);\r\n        }\r\n\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n\r\n        this.statusCtrl.setValue(null);\r\n    }\r\n\r\n    private _filter(name: string): Status[] {\r\n        const filterValue = name.toLowerCase();\r\n        return this.allStatuses.filter(s => s.name.toLowerCase().indexOf(filterValue) === 0);\r\n    }\r\n    // ****\r\n}\r\n","<mat-toolbar class=\"footer-bar\">\n    <mat-toolbar-row class=\"footer-row\">\n      <p class=\"copyright\">\t&copy; Lyelt 2018</p>\n      <a class=\"nav-item\" href=\"https://github.com/Lyelt\">GitHub</a>\n      <a class=\"nav-item\" href=\"https://www.linkedin.com/in/nicholasghobrial/\">LinkedIn</a>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  game-options works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-game-options',\n  templateUrl: './game-options.component.html',\n  styleUrls: ['./game-options.component.scss']\n})\nexport class GameOptionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar class=\"header-bar\">\r\n    <mat-toolbar-row>\r\n        <mat-icon (click)=\"toggleSidenav()\">menu</mat-icon>\r\n        <span class=\"spacer\"></span>\r\n        <span><a routerLink=\"\"><img class=\"header-logo\" src=\"assets/lyelt-logo.png\"></a></span>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    @Output() toggleSidenavEvent = new EventEmitter();\r\n    constructor(private router : Router) { }\r\n\r\n    ngOnInit() {\r\n    \r\n    }\r\n\r\n    toggleSidenav() {\r\n        this.toggleSidenavEvent.emit();\r\n    }\r\n}\r\n","<div class=\"container container-vertical\">\r\n    <h1>Manage Characters</h1>\r\n    <mat-table [dataSource]=\"availableCharacterSource\" matSort class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">\r\n                <mat-icon matTooltip=\"Options\" [matMenuTriggerFor]=\"characterMenu\">more_vert</mat-icon>\r\n                <mat-menu #characterMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"openDialog(character)\">\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>Edit</span>\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"deleteCharacter(character.id, true)\">\r\n                        <mat-icon>archive</mat-icon>\r\n                        <span>Archive</span>\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"deleteCharacter(character.id)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>Delete</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </mat-cell>\r\n            <mat-footer-cell *matFooterCellDef>\r\n                <mat-icon (click)=\"openDialog()\" matTooltip=\"Add a new character\">add</mat-icon>\r\n            </mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">{{character.name}} ({{character.owner == null ? 'NPC' : character.owner}})</mat-cell>\r\n            <mat-footer-cell *matFooterCellDef></mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"maxHP\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Max HP</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">{{character.maxHP}}</mat-cell>\r\n            <mat-footer-cell *matFooterCellDef></mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ac\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Armor Class</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">{{character.ac}}</mat-cell>\r\n            <mat-footer-cell *matFooterCellDef></mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"speed\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Speed</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">{{character.speed}}</mat-cell>\r\n            <mat-footer-cell *matFooterCellDef></mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"dexModifier\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Dex Modifier</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">{{character.dexModifier}}</mat-cell>\r\n            <mat-footer-cell *matFooterCellDef></mat-footer-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"availableCharacterHeaders\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: availableCharacterHeaders;\" class=\"character-row\"></mat-row>\r\n        <mat-footer-row *matFooterRowDef=\"availableCharacterHeaders\"></mat-footer-row>\r\n\r\n    </mat-table>\r\n\r\n    <div>\r\n        <button mat-raised-button color=\"warn\" class=\"show-btn\" (click)=\"showArchived = !showArchived\">{{showArchived | hideShow}} Archived Characters</button>\r\n    </div>\r\n\r\n    <mat-table *ngIf=\"showArchived\" [dataSource]=\"archivedCharacterSource\" matSort class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">\r\n                <mat-icon matTooltip=\"Options\" [matMenuTriggerFor]=\"archiveMenu\">more_vert</mat-icon>\r\n                <mat-menu #archiveMenu=\"matMenu\">\r\n                    <button mat-menu-item (click)=\"restore(character.id)\">\r\n                        <mat-icon>unarchive</mat-icon>\r\n                        <span>Restore</span>\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"deleteForever(character.id)\">\r\n                        <mat-icon>delete_forever</mat-icon>\r\n                        <span>Delete Forever</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Archived Characters</mat-header-cell>\r\n            <mat-cell *matCellDef=\"let character\">\r\n                {{character.name}}\r\n            </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"archivedCharacterHeaders\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: archivedCharacterHeaders;\" class=\"character-row\"></mat-row>\r\n\r\n    </mat-table>\r\n</div>","import { Component, OnInit, ViewChild, Injectable, Output } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, from } from 'rxjs';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSort, MatTableDataSource, MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { AddCharacterComponent } from '../add-character/add-character.component';\r\nimport { CharacterService } from '../services/character.service';\r\nimport { AvailableCharacter } from 'src/models/character';\r\nimport { CharacterSharingService } from '../services/character-sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-characters',\r\n  templateUrl: './manage-characters.component.html',\r\n  styleUrls: ['./manage-characters.component.scss']\r\n})\r\nexport class ManageCharactersComponent implements OnInit {\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    availableCharacterSource: MatTableDataSource<AvailableCharacter>;\r\n    availableCharacters: AvailableCharacter[];\r\n    availableCharacterHeaders = ['actions', 'name', 'maxHP', 'ac', 'speed', 'dexModifier'];\r\n\r\n    archivedCharacterSource: MatTableDataSource<AvailableCharacter>;\r\n    archivedCharacters: AvailableCharacter[];\r\n    archivedCharacterHeaders = ['actions', 'name'];\r\n\r\n    showArchived = false;\r\n\r\n    constructor(private charService: CharacterService, private dialog: MatDialog) {\r\n        this.refreshData();\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    refreshData() {\r\n        this.availableCharacters = [];\r\n        this.archivedCharacters = [];\r\n\r\n        this.charService.getAvailableCharacters().subscribe(\r\n            result => {\r\n                for (let character of result.json()) {\r\n                    this.availableCharacters.push(character);\r\n                }\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.availableCharacterSource = new MatTableDataSource(this.availableCharacters);\r\n                this.availableCharacterSource.sort = this.sort;\r\n            });\r\n\r\n        this.charService.getArchivedCharacters().subscribe(\r\n            result => {\r\n                for (let character of result.json()) {\r\n                    this.archivedCharacters.push(character);\r\n                }\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.archivedCharacterSource = new MatTableDataSource(this.archivedCharacters);\r\n            });\r\n    }\r\n\r\n    openDialog(character: AvailableCharacter) {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.autoFocus = true;\r\n        dialogConfig.data = character == null ? new AvailableCharacter() : character;\r\n\r\n        const dialogRef = this.dialog.open(AddCharacterComponent, dialogConfig);\r\n\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data)\r\n                this.saveCharacter(data)\r\n        });\r\n    }\r\n\r\n    // The user clicked save and we have all of the form data available\r\n    saveCharacter(data: any) {\r\n        let character: AvailableCharacter = data.character;\r\n        const newCharacter = character.id == null;  // If no ID, we know the character doesn't exist yet\r\n        const baseName = character.name;            // In case we need to enumerate the name\r\n\r\n        if (newCharacter)\r\n            character.id = 0;\r\n        \r\n        let characters: AvailableCharacter[] = [];\r\n        for (let i: number = 1; i <= data.quantity; i++) {\r\n            if (data.quantity <= 1) {\r\n                characters.push(character);\r\n            }\r\n            else {\r\n                // Make a shallow copy of the character and give it a new name\r\n                let newCharacter: AvailableCharacter = Object.assign(new AvailableCharacter(), character);\r\n                newCharacter.name = baseName + \" \" + i;\r\n                characters.push(newCharacter);\r\n            }\r\n        }\r\n\r\n        let request: Observable<Object> = newCharacter ? this.charService.saveCharacters(characters) : this.charService.updateCharacter(characters[0]);\r\n        request.subscribe(\r\n            result => { },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.refreshData();\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteCharacter(id, archive = false) {\r\n        let request = archive ? this.charService.archiveCharacter(id) : this.charService.deleteCharacter(id);\r\n        request.subscribe(\r\n            result => { },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.refreshData();\r\n            });\r\n    }\r\n\r\n    deleteForever(id) {\r\n        this.charService.deleteForever(id).subscribe(\r\n            result => { },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.refreshData();\r\n            });\r\n    }\r\n\r\n    restore(id) {\r\n        this.charService.restoreCharacter(id).subscribe(\r\n            result => { },\r\n            error => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                this.refreshData();\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n    MatButtonModule, MatStepperModule, MatInputModule, MatFormFieldModule,\r\n    MatAutocompleteModule, MatCardModule, MatDatepickerModule, MatNativeDateModule,\r\n    MatExpansionModule, MatToolbarModule, MatSnackBarModule, MatMenuModule, MatProgressBarModule,\r\n    MatProgressSpinnerModule, MatDialogModule, MatTableModule, MatSortModule, MatCheckboxModule,\r\n    MatIconModule, MatTooltipModule, MatSelectModule, MatDividerModule, MatSidenavModule, MatChipsModule,\r\n    MatBadgeModule\r\n} from '@angular/material';\r\n\r\n\r\nconst modules = [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatStepperModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    MatToolbarModule,\r\n    MatSnackBarModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSelectModule,\r\n    MatDividerModule,\r\n    MatSidenavModule,\r\n    MatChipsModule,\r\n    MatBadgeModule\r\n]\r\n\r\n@NgModule({\r\n    imports: [...modules],\r\n    exports: [...modules],\r\n})\r\n\r\nexport class MaterialModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'hideShow'\n})\nexport class HideShowPipe implements PipeTransform {\n\n  transform(shown: boolean): string {\n      return shown ? 'Hide' : 'Show';\n  }\n\n}\n","<button mat-raised-button color=\"accent\" (click)=\"rollAllInitiatives()\" class=\"roll-button\">Roll All Initiatives</button>\r\n<p *ngFor=\"let character of characters\">\r\n    <mat-form-field>\r\n        <mat-label>{{character.name}}</mat-label>\r\n        <input id=\"Initiative{{character.id}}\" matInput [placeholder]=\"character.dexModifier\">\r\n        <mat-icon class=\"roller\" matTooltip=\"Roll initiative with a bonus of {{character.dexModifier}}\" (click)=\"rollInitiative(character)\" matSuffix>autorenew</mat-icon>\r\n        <mat-hint>Initiative</mat-hint>\r\n    </mat-form-field>\r\n</p>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AvailableCharacter } from 'src/models/character';\r\nimport { CharacterSharingService } from '../services/character-sharing.service';\r\nimport { UtilsService } from '../services/utils.service';\r\n\r\n@Component({\r\n  selector: 'app-preparation',\r\n  templateUrl: './preparation.component.html',\r\n  styleUrls: ['./preparation.component.scss']\r\n})\r\n\r\nexport class PreparationComponent implements OnInit {\r\n    characters: AvailableCharacter[];\r\n\r\n\r\n    constructor(private selectedCharService: CharacterSharingService,\r\n                private utilService: UtilsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    refreshSelectedCharacters() {\r\n        this.characters = this.selectedCharService.getSelected();\r\n    }\r\n\r\n    rollAllInitiatives() {\r\n        for (let character of this.characters) {\r\n            this.rollInitiative(character);\r\n        }\r\n    }\r\n\r\n    rollInitiative(character: AvailableCharacter) {\r\n        let roll = this.utilService.randomIntFromInterval(1, 20) + character.dexModifier;\r\n\r\n        document.getElementById(\"Initiative\" + character.id).setAttribute(\"value\", roll.toString());\r\n        character.initiativeRoll = roll;\r\n    }\r\n}\r\n","<p>\n  review works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.scss']\n})\nexport class ReviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { AvailableCharacter, ActiveCharacter } from 'src/models/character';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterSharingService {\r\n    private selectedCharacters: AvailableCharacter[] = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    setSelected(chars: AvailableCharacter[]) {\r\n        this.selectedCharacters = chars;\r\n    }\r\n\r\n    getSelected() {\r\n        return this.selectedCharacters;\r\n    }\r\n\r\n    getSelectedAsActive() {\r\n        return this.selectedCharacters.sort((a, b) =>\r\n            // sort based on initiative order\r\n            a.initiativeRoll > b.initiativeRoll ? -1 : \r\n                a.initiativeRoll < b.initiativeRoll ? 1 :   \r\n                    // if tied, use dex modifier\r\n                    a.dexModifier > b.dexModifier ? -1 :\r\n                        a.dexModifier < b.dexModifier ? 1 :\r\n                            // if still tied, it'll be random\r\n                            0).map(c => new ActiveCharacter(c));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { AvailableCharacter } from 'src/models/character';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n    BASE_URL = 'Character/';\r\n\r\n    constructor(private http: Http) {\r\n        \r\n    }\r\n\r\n    getAvailableCharacters() {\r\n        return this.http.get(this.BASE_URL + 'GetAvailableCharacters');\r\n    }\r\n\r\n    getArchivedCharacters() {\r\n        return this.http.get(this.BASE_URL + 'GetArchivedCharacters');\r\n    }\r\n\r\n    saveCharacter(character: AvailableCharacter) {\r\n        return this.http.post(this.BASE_URL + 'SaveCharacter', character);\r\n    }\r\n\r\n    saveCharacters(characters: AvailableCharacter[]) {\r\n        return this.http.post(this.BASE_URL + 'SaveCharacters', characters);\r\n    }\r\n\r\n    updateCharacter(character: AvailableCharacter) {\r\n        return this.http.put(this.BASE_URL + 'UpdateCharacter', character);\r\n    }\r\n\r\n    deleteCharacter(id: number) {\r\n        return this.http.delete(this.BASE_URL + 'DeleteCharacter/' + id);\r\n    }\r\n\r\n    archiveCharacter(id: number) {\r\n        return this.http.delete(this.BASE_URL + 'ArchiveCharacter/' + id);\r\n    }\r\n\r\n    deleteForever(id: number) {\r\n        return this.http.delete(this.BASE_URL + 'DeleteForever/' + id);\r\n    }\r\n\r\n    restoreCharacter(id: number) {\r\n        return this.http.delete(this.BASE_URL + 'RestoreCharacter/' + id);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Status, ActionType } from 'src/models/game';\r\nimport { Http } from '@angular/http';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n    BASE_URL = 'Game/'\n\n    constructor(private http: Http) { }\n\n    getAllStatuses() {\n        return this.http.get(this.BASE_URL + 'GetAllStatuses');\r\n    }\n\n    getAllActionTypes() {\n        return this.http.get(this.BASE_URL + 'GetAllActionTypes');\r\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDrawer } from '@angular/material';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidenavService {\n\n    public sideNav: MatDrawer;\n    constructor() { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n    constructor() { }\n\n    randomIntFromInterval(min, max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\n}\n","<div class=\"sidenav-bar\">\r\n    <!--<div><span class=\"nav-item\" routerLink=\"\"><img class=\"logo\" src=\"assets/lyelt-logo.png\"></span></div>-->\r\n    <a class=\"nav-item\" routerLink=\"encounter\" routerLinkActive=\"active\">Start Encounter</a>\r\n    <a class=\"nav-item\" routerLink=\"manage\" routerLinkActive=\"active\">Manage Characters</a>\r\n    <a class=\"nav-item\" routerLink=\"options\" routerLinkActive=\"active\">Game Options</a>\r\n    <a class=\"nav-item\" routerLink=\"review\" routerLinkActive=\"active\">Review Battles</a>\r\n    <a class=\"nav-item\" routerLink=\"statistics\" routerLinkActive=\"active\">Character Stats</a>\r\n    <a class=\"nav-item\" routerLink=\"about\" routerLinkActive=\"active\">About</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SidenavService } from '../services/sidenav.service';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n    constructor(private router: Router, private sidenavService: SidenavService) { }\r\n\r\n    ngOnInit() {\r\n        this.router.events.subscribe(event => {\r\n            this.closeSidenav();\r\n        });\r\n    }\r\n\r\n    closeSidenav() {\r\n        this.sidenavService.sideNav.close();\r\n    }\r\n}\r\n","<p>\n  statistics works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","﻿import { Status } from \"./game\";\r\n\r\nexport class AvailableCharacter {\r\n    id: number;\r\n\r\n    name: string;\r\n\r\n    maxHP: number;\r\n\r\n    ac: number;\r\n\r\n    speed: number;\r\n\r\n    owner: string;\r\n\r\n    dexModifier: number;\r\n\r\n    initiativeRoll: number;\r\n\r\n    constructor(character?: AvailableCharacter) {\r\n        if (character && character != null) {\r\n            this.id = character.id;\r\n            this.name = character.name;\r\n            this.maxHP = character.maxHP;\r\n            this.ac = character.ac;\r\n            this.speed = character.speed;\r\n            this.owner = character.owner;\r\n            this.dexModifier = character.dexModifier;\r\n            this.initiativeRoll = character.initiativeRoll;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActiveCharacter extends AvailableCharacter {\r\n    statuses: Status[];\r\n\r\n    currentHP: number;\r\n\r\n    constructor(original: AvailableCharacter) {\r\n        super(original);\r\n        this.statuses = [];\r\n        this.currentHP = this.maxHP;\r\n    }\r\n}"],"sourceRoot":""}